- name: Install pulseaudio
  ansible.builtin.package:
    name:
      - pulseaudio
      - pulseaudio-module-bluetooth
    state: present

- name: Create autologin directory
  ansible.builtin.file:
    path: /etc/systemd/system/getty@tty1.service.d
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Add autologin
  ansible.builtin.copy:
    dest: /etc/systemd/system/getty@tty1.service.d/autologin.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=-/sbin/agetty --autologin "{{ user }}" --noclear %I $TERM
    mode: u=rw,g=r,o=r
  register: bluetooth_autologin

- name: Restart after adding autologin
  ansible.builtin.reboot:
  when: bluetooth_autologin is changed # noqa: no-handler

- name: Edit bluetooth configuration file to allow discoverability
  ansible.builtin.lineinfile:
    path: /etc/bluetooth/main.conf
    regexp: 'DiscoverableTimeout ='
    line: DiscoverableTimeout = 0
  notify: Restart bluetooth

- name: Edit bluetooth configuration file to change class
  ansible.builtin.lineinfile:
    path: /etc/bluetooth/main.conf
    regexp: 'Class ='
    line: Class = 0x41C
  notify: Restart bluetooth

- name: Edit pulseaudio configuration to disable pulseaudio bluetooth module auto loading
  ansible.builtin.lineinfile:
    path: /etc/pulse/default.pa
    regexp: 'load-module module-bluetooth-policy'
    line: "#load-module module-bluetooth-policy"
  notify: Restart pulseaudio

- name: Enable and start pulseaudio
  ansible.builtin.systemd_service:
    name: pulseaudio
    state: started
    enabled: true
    scope: user
  become: true
  become_user: "{{ user }}"

- name: Get bluetooth status
  ansible.builtin.command: bluetoothctl show
  changed_when: false
  register: bluetooth_status
  become: true
  become_user: "{{ user }}"

- name: Set bluetooth discoverable
  ansible.builtin.command: bluetoothctl discoverable on
  when: "'Discoverable: no' in bluetooth_status.stdout"
  changed_when: true
  check_mode: false
  become: true
  become_user: "{{ user }}"

- name: Add pactl service
  ansible.builtin.copy:
    dest: /etc/systemd/user/pactl-subscribe.service
    src: pactl-subscribe.service
    mode: u=rw,g=r,o=r
  register: bluetooth_pactl_service

- name: Reload daemon configuration
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: bluetooth_pactl_service is changed # noqa: no-handler

- name: Add pactl script
  ansible.builtin.copy:
    dest: /usr/local/bin/pactl_subscribe_script.sh
    src: pactl_subscribe_script.sh
    mode: u=rwx,g=rx,o=rx
  notify: Restart pactl script

- name: Enable and start pactl script
  ansible.builtin.systemd_service:
    name: pactl-subscribe
    state: started
    enabled: true
    scope: user
  become: true
  become_user: "{{ user }}"
